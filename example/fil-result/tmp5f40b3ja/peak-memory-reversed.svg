<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1028" onload="init(evt)" viewBox="0 0 1200 1028" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:"monospace"; font-size:16px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:21px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="1028" fill="url(#background)"/>
    <text id="title" x="50.0000%" y="32.00">Peak Tracked Memory Usage, Reversed (281.0 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil memory profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" x="10" y="32.00">Reset Zoom</text>
    <text id="search" x="1090" y="32.00">Search</text>
    <text id="matched" x="1090" y="1015.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="294580715">
        <g>
            <title>[No Python stack] (99,566 bytes, 0.03%)</title>
            <rect x="0.0000%" y="122" width="0.0338%" height="21" fill="rgb(255,247,247)" fg:x="0" fg:w="99566"/>
            <text x="0.2500%" y="135.50"></text>
        </g>
        <g>
            <title> (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="122" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="135.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:525 (_compile_bytecode) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="144" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="157.50"></text>
        </g>
        <g>
            <title> (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="166" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="179.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:857 (get_code) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="188" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="201.50"></text>
        </g>
        <g>
            <title> (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="210" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:724 (exec_module) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="232" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="245.50"></text>
        </g>
        <g>
            <title> (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="254" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:677 (_load_unlocked) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="276" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="289.50"></text>
        </g>
        <g>
            <title> (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="298" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:967 (_find_and_load_unlocked) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="320" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="333.50"></text>
        </g>
        <g>
            <title> (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="342" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:983 (_find_and_load) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="364" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="377.50"></text>
        </g>
        <g>
            <title>    import threadpoolctl (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="386" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/filprofiler/_tracer.py:156 (disable_thread_pools) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="408" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="421.50"></text>
        </g>
        <g>
            <title>            return next(self.gen) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="430" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/contextlib.py:112 (__enter__) (45,381 bytes, 0.02%)</title>
            <rect x="0.0338%" y="452" width="0.0154%" height="21" fill="rgb(255,248,248)" fg:x="99566" fg:w="45381"/>
            <text x="0.2838%" y="465.50"></text>
        </g>
        <g>
            <title>    a = empty(shape, dtype, order) (3,637,480 bytes, 1.23%)</title>
            <rect x="0.0530%" y="122" width="1.2348%" height="21" fill="rgb(255,233,233)" fg:x="156001" fg:w="3637480"/>
            <text x="0.3030%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/numpy/core/numeric.py:204 (ones) (3,637,480 bytes, 1.23%)</title>
            <rect x="0.0530%" y="144" width="1.2348%" height="21" fill="rgb(255,233,233)" fg:x="156001" fg:w="3637480"/>
            <text x="0.3030%" y="157.50"></text>
        </g>
        <g>
            <title>            padding_img = np.ones((h + 10, w + 10, 3), dtype=np.uint8) * 255 (3,637,480 bytes, 1.23%)</title>
            <rect x="0.0530%" y="166" width="1.2348%" height="21" fill="rgb(255,233,233)" fg:x="156001" fg:w="3637480"/>
            <text x="0.3030%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:84 (extract) (3,637,480 bytes, 1.23%)</title>
            <rect x="0.0530%" y="188" width="1.2348%" height="21" fill="rgb(255,233,233)" fg:x="156001" fg:w="3637480"/>
            <text x="0.3030%" y="201.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (3,637,480 bytes, 1.23%)</title>
            <rect x="0.0530%" y="210" width="1.2348%" height="21" fill="rgb(255,233,233)" fg:x="156001" fg:w="3637480"/>
            <text x="0.3030%" y="223.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (3,637,480 bytes, 1.23%)</title>
            <rect x="0.0530%" y="232" width="1.2348%" height="21" fill="rgb(255,233,233)" fg:x="156001" fg:w="3637480"/>
            <text x="0.3030%" y="245.50"></text>
        </g>
        <g>
            <title>    return im._new(core.fill(mode, size, color)) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="122" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/PIL/Image.py:2698 (new) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="144" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="157.50"></text>
        </g>
        <g>
            <title>    im = new(mode, size) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="166" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/PIL/Image.py:2734 (frombytes) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="188" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="201.50"></text>
        </g>
        <g>
            <title>    return frombytes(mode, size, data, decoder_name, args) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="210" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="223.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/PIL/Image.py:2789 (frombuffer) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="232" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="245.50"></text>
        </g>
        <g>
            <title>    return frombuffer(mode, size, obj, &quot;raw&quot;, rawmode, 0, 1) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="254" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="267.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/PIL/Image.py:2849 (fromarray) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="276" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="289.50"></text>
        </g>
        <g>
            <title>        pil_img = Image.fromarray(padding_img) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="298" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:119 (_preprocess) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="320" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="333.50"></text>
        </g>
        <g>
            <title>            scale=scale_factor, (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="342" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:73 (predict) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="364" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="377.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="386" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="408" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="421.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="430" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="443.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (4,947,440 bytes, 1.68%)</title>
            <rect x="1.2895%" y="452" width="1.6795%" height="21" fill="rgb(255,230,230)" fg:x="3798620" fg:w="4947440"/>
            <text x="1.5395%" y="465.50"></text>
        </g>
        <g>
            <title>        d2 = self.pool(d1) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="298" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:86 (forward) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="320" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="333.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="342" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="364" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="377.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="386" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="408" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="421.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="430" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="452" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="465.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="474" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="487.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (4,989,304 bytes, 1.69%)</title>
            <rect x="2.9690%" y="496" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4989304"/>
            <text x="3.2190%" y="509.50"></text>
        </g>
        <g>
            <title>    return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="122" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/functional.py:659 (_max_pool2d) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="144" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="157.50"></text>
        </g>
        <g>
            <title>            return if_false(*args, **kwargs) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="166" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/_jit_internal.py:365 (fn) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="188" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="201.50"></text>
        </g>
        <g>
            <title>                            self.return_indices) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="210" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="223.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/pooling.py:164 (forward) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="232" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="245.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="254" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="267.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,991,063 bytes, 1.69%)</title>
            <rect x="2.9690%" y="276" width="1.6943%" height="21" fill="rgb(255,230,230)" fg:x="8746060" fg:w="4991063"/>
            <text x="3.2190%" y="289.50"></text>
        </g>
        <g>
            <title>        h = self.up1(h, x) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="518" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="531.50">      ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:98 (forward) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="540" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="553.50">/home/n..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="562" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="575.50">      ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="584" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="597.50">/home/n..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="606" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="619.50">      ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="628" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="641.50">/home/n..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="650" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="663.50">      ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="672" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="685.50">/home/n..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="694" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="707.50">    ta..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (20,972,188 bytes, 7.12%)</title>
            <rect x="4.6712%" y="716" width="7.1193%" height="21" fill="rgb(255,210,210)" fg:x="13760481" fg:w="20972188"/>
            <text x="4.9212%" y="729.50">/tmp/ip..</text>
        </g>
        <g>
            <title>        return self.double_conv(x) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="342" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="355.50">        re..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/unet_parts.py:25 (forward) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="364" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="377.50">/home/niits..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="386" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="399.50">          ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="408" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="421.50">/home/niits..</text>
        </g>
        <g>
            <title>        return self.conv(x) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="430" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="443.50">        re..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/unet_parts.py:68 (forward) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="452" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="465.50">/home/niits..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="474" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="487.50">          ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (30,877,844 bytes, 10.48%)</title>
            <rect x="4.6712%" y="496" width="10.4820%" height="21" fill="rgb(255,201,201)" fg:x="13760481" fg:w="30877844"/>
            <text x="4.9212%" y="509.50">/home/niits..</text>
        </g>
        <g>
            <title>        h = self.up2(h, d1) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="518" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="531.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:97 (forward) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="540" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="553.50">/h..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="562" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="575.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="584" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="597.50">/h..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="606" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="619.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="628" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="641.50">/h..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="650" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="663.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="672" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="685.50">/h..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="694" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="707.50"> ..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (9,905,656 bytes, 3.36%)</title>
            <rect x="11.7905%" y="716" width="3.3626%" height="21" fill="rgb(255,222,222)" fg:x="34732669" fg:w="9905656"/>
            <text x="12.0405%" y="729.50">/t..</text>
        </g>
        <g>
            <title>        input, weight, bias, running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="122" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="135.50">        input, wei..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/functional.py:2150 (batch_norm) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="144" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="157.50">/home/niits/anacond..</text>
        </g>
        <g>
            <title>            self.weight, self.bias, bn_training, exponential_average_factor, self.eps) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="166" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="179.50">            self.w..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py:140 (forward) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="188" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="201.50">/home/niits/anacond..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="210" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="223.50">            result..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="232" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="245.50">/home/niits/anacond..</text>
        </g>
        <g>
            <title>            input = module(input) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="254" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="267.50">            input ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="276" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="289.50">/home/niits/anacond..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="298" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="311.50">            result..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (50,692,446 bytes, 17.21%)</title>
            <rect x="4.6712%" y="320" width="17.2083%" height="21" fill="rgb(255,187,187)" fg:x="13760481" fg:w="50692446"/>
            <text x="4.9212%" y="333.50">/home/niits/anacond..</text>
        </g>
        <g>
            <title>            input = module(input) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="342" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="355.50">     ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="364" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="377.50">/home/..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="386" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="399.50">     ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="408" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="421.50">/home/..</text>
        </g>
        <g>
            <title>        d1 = self.stem(x)  # 64 (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="430" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="443.50">     ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:85 (forward) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="452" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="465.50">/home/..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="474" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="487.50">     ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="496" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="509.50">/home/..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="518" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="531.50">     ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="540" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="553.50">/home/..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="562" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="575.50">     ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="584" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="597.50">/home/..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="606" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="619.50">    t..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (19,814,602 bytes, 6.73%)</title>
            <rect x="15.1532%" y="628" width="6.7264%" height="21" fill="rgb(255,211,211)" fg:x="44638325" fg:w="19814602"/>
            <text x="15.4032%" y="641.50">/tmp/i..</text>
        </g>
        <g>
            <title>        path = sep*initial_slashes + path (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="122" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/posixpath.py:365 (normpath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="144" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="157.50"></text>
        </g>
        <g>
            <title>    return normpath(path) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="166" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/posixpath.py:378 (abspath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="188" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="201.50"></text>
        </g>
        <g>
            <title>    return abspath(path) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="210" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="223.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/posixpath.py:389 (realpath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="232" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="245.50"></text>
        </g>
        <g>
            <title>            rpath = os.path.realpath(filepath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="254" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="267.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:575 (_realpath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="276" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="289.50"></text>
        </g>
        <g>
            <title>        filepath = self._realpath(filepath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="298" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:492 (_make_module_from_path) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="320" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="333.50"></text>
        </g>
        <g>
            <title>                self._make_module_from_path(filepath) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="342" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:400 (match_module_callback) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="364" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="377.50"></text>
        </g>
        <g>
            <title>        libc.dl_iterate_phdr(c_match_module_callback, data) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="386" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:409 (_find_modules_with_dl_iterate_phdr) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="408" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="421.50"></text>
        </g>
        <g>
            <title>            self._find_modules_with_dl_iterate_phdr() (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="430" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:375 (_load_modules) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="452" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="465.50"></text>
        </g>
        <g>
            <title>            self._load_modules() (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="474" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:340 (__init__) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="496" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="509.50"></text>
        </g>
        <g>
            <title>                                  user_api=self._user_api) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="518" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:269 (_set_threadpool_limits) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="540" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="553.50"></text>
        </g>
        <g>
            <title>        self._original_info = self._set_threadpool_limits() (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="562" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:171 (__init__) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="584" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="597.50"></text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="606" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/filprofiler/_tracer.py:160 (disable_thread_pools) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="628" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="641.50"></text>
        </g>
        <g>
            <title>            return next(self.gen) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="650" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/contextlib.py:112 (__enter__) (40,577 bytes, 0.01%)</title>
            <rect x="21.8820%" y="672" width="0.0138%" height="21" fill="rgb(255,248,248)" fg:x="64460133" fg:w="40577"/>
            <text x="22.1320%" y="685.50"></text>
        </g>
        <g>
            <title>        h = self.up1(h, x) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="254" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="267.50">        h = se..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:98 (forward) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="276" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="289.50">/home/niits/SUN..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="298" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="311.50">            re..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="320" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="333.50">/home/niits/ana..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="342" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="355.50">            ou..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="364" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="377.50">/home/niits/SUN..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="386" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="399.50">            ma..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="408" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="421.50">/home/niits/SUN..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="430" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="443.50">    tables = e..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (39,476,728 bytes, 13.40%)</title>
            <rect x="21.8958%" y="452" width="13.4010%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39476728"/>
            <text x="22.1458%" y="465.50">/tmp/ipykernel_..</text>
        </g>
        <g>
            <title>        return _VF.constant_pad_nd(input, pad, value) (39,477,648 bytes, 13.40%)</title>
            <rect x="21.8958%" y="122" width="13.4013%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39477648"/>
            <text x="22.1458%" y="135.50">        return..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/functional.py:4000 (_pad) (39,477,648 bytes, 13.40%)</title>
            <rect x="21.8958%" y="144" width="13.4013%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39477648"/>
            <text x="22.1458%" y="157.50">/home/niits/ana..</text>
        </g>
        <g>
            <title>        x1 = F.pad(x1, [diffX // 2, diffX - diffX // 2, diffY // 2, diffY - diffY // 2]) (39,477,648 bytes, 13.40%)</title>
            <rect x="21.8958%" y="166" width="13.4013%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39477648"/>
            <text x="22.1458%" y="179.50">        x1 = F..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/unet_parts.py:63 (forward) (39,477,648 bytes, 13.40%)</title>
            <rect x="21.8958%" y="188" width="13.4013%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39477648"/>
            <text x="22.1458%" y="201.50">/home/niits/SUN..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (39,477,648 bytes, 13.40%)</title>
            <rect x="21.8958%" y="210" width="13.4013%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39477648"/>
            <text x="22.1458%" y="223.50">            re..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (39,477,648 bytes, 13.40%)</title>
            <rect x="21.8958%" y="232" width="13.4013%" height="21" fill="rgb(255,195,195)" fg:x="64500710" fg:w="39477648"/>
            <text x="22.1458%" y="245.50">/home/niits/ana..</text>
        </g>
        <g>
            <title>        return b&quot;&quot;.join(data) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="122" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/PIL/Image.py:761 (tobytes) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="144" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="157.50"></text>
        </g>
        <g>
            <title>            new[&quot;data&quot;] = self.tobytes() (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="166" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/PIL/Image.py:698 (__array__) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="188" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="201.50"></text>
        </g>
        <g>
            <title>        img_nd = np.array(rz_pil_img) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="210" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="223.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:125 (_preprocess) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="232" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="245.50"></text>
        </g>
        <g>
            <title>            scale=scale_factor, (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="254" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="267.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:73 (predict) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="276" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="289.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="298" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="320" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="333.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="342" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="355.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (925,260 bytes, 0.31%)</title>
            <rect x="35.2971%" y="364" width="0.3141%" height="21" fill="rgb(255,241,241)" fg:x="103978358" fg:w="925260"/>
            <text x="35.5471%" y="377.50"></text>
        </g>
        <g>
            <title>        d3 = self.block1(d2)  # 64 (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="298" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:88 (forward) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="320" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="333.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="342" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="364" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="377.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="386" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="408" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="421.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="430" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="452" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="465.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="474" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="487.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (4,989,304 bytes, 1.69%)</title>
            <rect x="35.6123%" y="496" width="1.6937%" height="21" fill="rgb(255,230,230)" fg:x="104906976" fg:w="4989304"/>
            <text x="35.8623%" y="509.50"></text>
        </g>
        <g>
            <title>        d4 = self.block2(d3)  # 128 (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="298" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:89 (forward) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="320" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="333.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="342" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="364" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="377.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="386" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="408" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="421.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="430" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="452" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="465.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="474" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="487.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (2,495,368 bytes, 0.85%)</title>
            <rect x="37.3060%" y="496" width="0.8471%" height="21" fill="rgb(255,236,236)" fg:x="109896280" fg:w="2495368"/>
            <text x="37.5560%" y="509.50"></text>
        </g>
        <g>
            <title>        d5 = self.block3(d4)  # 256 (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="298" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:90 (forward) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="320" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="333.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="342" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="364" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="377.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="386" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="408" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="421.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="430" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="452" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="465.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="474" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="487.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (1,248,136 bytes, 0.42%)</title>
            <rect x="38.1531%" y="496" width="0.4237%" height="21" fill="rgb(255,240,240)" fg:x="112391648" fg:w="1248136"/>
            <text x="38.4031%" y="509.50"></text>
        </g>
        <g>
            <title>        return self.convs(x) + self.idconv(self.pool(x)) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="122" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="135.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:59 (forward) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="144" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="157.50">/h..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="166" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="179.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="188" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="201.50">/h..</text>
        </g>
        <g>
            <title>            input = module(input) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="210" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="223.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="232" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="245.50">/h..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="254" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="267.50"> ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (9,378,304 bytes, 3.18%)</title>
            <rect x="35.6123%" y="276" width="3.1836%" height="21" fill="rgb(255,223,223)" fg:x="104906976" fg:w="9378304"/>
            <text x="35.8623%" y="289.50">/h..</text>
        </g>
        <g>
            <title>        d6 = self.block4(d5)  # 512 (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="298" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:91 (forward) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="320" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="333.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="342" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="364" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="377.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="386" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="408" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="421.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="430" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="452" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="465.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="474" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="487.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (645,496 bytes, 0.22%)</title>
            <rect x="38.5768%" y="496" width="0.2191%" height="21" fill="rgb(255,243,243)" fg:x="113639784" fg:w="645496"/>
            <text x="38.8268%" y="509.50"></text>
        </g>
        <g>
            <title>        return torch.stack((xv, yv), 2).view((1, 1, ny, nx, 2)).float() (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="122" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:88 (_make_grid) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="144" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="157.50"></text>
        </g>
        <g>
            <title>                    self.grid[i] = self._make_grid(nx, ny).to(x[i].device) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="166" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:74 (forward) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="188" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="201.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="210" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="223.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="232" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="245.50"></text>
        </g>
        <g>
            <title>            x = m(x)  # run (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="254" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="267.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:150 (forward_once) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="276" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="289.50"></text>
        </g>
        <g>
            <title>        return self.forward_once(x, profile)  # single-scale inference, train (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="298" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:138 (forward) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="320" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="333.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="342" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="364" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="377.50"></text>
        </g>
        <g>
            <title>                    imgs.to(p.device).type_as(p), augment, profile (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="386" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:221 (forward) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="408" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="421.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="430" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/autograd/grad_mode.py:27 (decorate_context) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="452" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="465.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="474" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="496" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="509.50"></text>
        </g>
        <g>
            <title>                pred = self.model(tensor)[0] (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="518" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/detector.py:89 (predict) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="540" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="553.50"></text>
        </g>
        <g>
            <title>        table_regions = self.table_detection_model.predict([image]) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="562" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:75 (extract) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="584" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="597.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="606" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="619.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (68,328 bytes, 0.02%)</title>
            <rect x="38.7991%" y="628" width="0.0232%" height="21" fill="rgb(255,247,247)" fg:x="114294780" fg:w="68328"/>
            <text x="39.0491%" y="641.50"></text>
        </g>
        <g>
            <title>        ts_img = ts_img.to(device=self.device, dtype=torch.float32) (3,701,284 bytes, 1.26%)</title>
            <rect x="38.8244%" y="122" width="1.2565%" height="21" fill="rgb(255,233,233)" fg:x="114369206" fg:w="3701284"/>
            <text x="39.0744%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:77 (predict) (3,701,284 bytes, 1.26%)</title>
            <rect x="38.8244%" y="144" width="1.2565%" height="21" fill="rgb(255,233,233)" fg:x="114369206" fg:w="3701284"/>
            <text x="39.0744%" y="157.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (3,701,284 bytes, 1.26%)</title>
            <rect x="38.8244%" y="166" width="1.2565%" height="21" fill="rgb(255,233,233)" fg:x="114369206" fg:w="3701284"/>
            <text x="39.0744%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (3,701,284 bytes, 1.26%)</title>
            <rect x="38.8244%" y="188" width="1.2565%" height="21" fill="rgb(255,233,233)" fg:x="114369206" fg:w="3701284"/>
            <text x="39.0744%" y="201.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (3,701,284 bytes, 1.26%)</title>
            <rect x="38.8244%" y="210" width="1.2565%" height="21" fill="rgb(255,233,233)" fg:x="114369206" fg:w="3701284"/>
            <text x="39.0744%" y="223.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (3,701,284 bytes, 1.26%)</title>
            <rect x="38.8244%" y="232" width="1.2565%" height="21" fill="rgb(255,233,233)" fg:x="114369206" fg:w="3701284"/>
            <text x="39.0744%" y="245.50"></text>
        </g>
        <g>
            <title>        x = torch.cat([x2, x1], dim=1) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="122" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="135.50">        x = tor..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/unet_parts.py:67 (forward) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="144" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="157.50">/home/niits/SUN/..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="166" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="179.50">            res..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="188" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="201.50">/home/niits/anac..</text>
        </g>
        <g>
            <title>        h = self.up1(h, x) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="210" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="223.50">        h = sel..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:98 (forward) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="232" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="245.50">/home/niits/SUN/..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="254" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="267.50">            res..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="276" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="289.50">/home/niits/anac..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="298" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="311.50">            out..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="320" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="333.50">/home/niits/SUN/..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="342" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="355.50">            mas..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="364" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="377.50">/home/niits/SUN/..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="386" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="399.50">    tables = ex..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (43,177,695 bytes, 14.66%)</title>
            <rect x="40.0809%" y="408" width="14.6573%" height="21" fill="rgb(255,192,192)" fg:x="118070490" fg:w="43177695"/>
            <text x="40.3309%" y="421.50">/tmp/ipykernel_1..</text>
        </g>
        <g>
            <title>            img_trans = img_trans / 255 (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="122" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="135.50">..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:130 (_preprocess) (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="144" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="157.50">/..</text>
        </g>
        <g>
            <title>            scale=scale_factor, (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="166" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="179.50">..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:73 (predict) (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="188" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="201.50">/..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="210" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="223.50">..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="232" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="245.50">/..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="254" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="267.50">..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (7,401,952 bytes, 2.51%)</title>
            <rect x="54.7455%" y="276" width="2.5127%" height="21" fill="rgb(255,226,226)" fg:x="161269695" fg:w="7401952"/>
            <text x="54.9955%" y="289.50">/..</text>
        </g>
        <g>
            <title>                filepath = filepath.decode(&quot;utf-8&quot;) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="122" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="135.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:397 (match_module_callback) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="144" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="157.50"></text>
        </g>
        <g>
            <title>        libc.dl_iterate_phdr(c_match_module_callback, data) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="166" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="179.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:409 (_find_modules_with_dl_iterate_phdr) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="188" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="201.50"></text>
        </g>
        <g>
            <title>            self._find_modules_with_dl_iterate_phdr() (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="210" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="223.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:375 (_load_modules) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="232" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="245.50"></text>
        </g>
        <g>
            <title>            self._load_modules() (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="254" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="267.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:340 (__init__) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="276" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="289.50"></text>
        </g>
        <g>
            <title>                                  user_api=self._user_api) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="298" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="311.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:269 (_set_threadpool_limits) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="320" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="333.50"></text>
        </g>
        <g>
            <title>        self._original_info = self._set_threadpool_limits() (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="342" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/threadpoolctl.py:171 (__init__) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="364" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="377.50"></text>
        </g>
        <g>
            <title>    with threadpoolctl.threadpool_limits({&quot;blas&quot;: 1, &quot;openmp&quot;: 1}): (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="386" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/filprofiler/_tracer.py:160 (disable_thread_pools) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="408" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="421.50"></text>
        </g>
        <g>
            <title>            return next(self.gen) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="430" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/contextlib.py:112 (__enter__) (41,002 bytes, 0.01%)</title>
            <rect x="57.2658%" y="452" width="0.0139%" height="21" fill="rgb(255,248,248)" fg:x="168693944" fg:w="41002"/>
            <text x="57.5158%" y="465.50"></text>
        </g>
        <g>
            <title>        return self.cv3(torch.cat((self.m(self.cv1(x)), self.cv2(x)), dim=1)) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="342" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:98 (forward) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="364" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="377.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="386" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="408" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="421.50"></text>
        </g>
        <g>
            <title>            x = m(x)  # run (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="430" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:150 (forward_once) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="452" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="465.50"></text>
        </g>
        <g>
            <title>        return self.forward_once(x, profile)  # single-scale inference, train (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="474" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:138 (forward) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="496" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="509.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="518" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="540" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="553.50"></text>
        </g>
        <g>
            <title>                    imgs.to(p.device).type_as(p), augment, profile (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="562" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:221 (forward) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="584" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="597.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="606" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/autograd/grad_mode.py:27 (decorate_context) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="628" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="650" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="672" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="685.50"></text>
        </g>
        <g>
            <title>                pred = self.model(tensor)[0] (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="694" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="707.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/detector.py:89 (predict) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="716" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="729.50"></text>
        </g>
        <g>
            <title>        table_regions = self.table_detection_model.predict([image]) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="738" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="751.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:75 (extract) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="760" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="773.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="782" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="795.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (5,093,920 bytes, 1.73%)</title>
            <rect x="57.2809%" y="804" width="1.7292%" height="21" fill="rgb(255,230,230)" fg:x="168738466" fg:w="5093920"/>
            <text x="57.5309%" y="817.50"></text>
        </g>
        <g>
            <title>        return x + self.cv2(self.cv1(x)) if self.add else self.cv2(self.cv1(x)) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="342" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:57 (forward) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="364" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="377.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="386" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="408" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="421.50"></text>
        </g>
        <g>
            <title>            input = module(input) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="430" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="452" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="465.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="474" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="496" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="509.50"></text>
        </g>
        <g>
            <title>        return self.cv3(torch.cat((self.m(self.cv1(x)), self.cv2(x)), dim=1)) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="518" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:98 (forward) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="540" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="562" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="584" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="597.50"></text>
        </g>
        <g>
            <title>            x = m(x)  # run (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="606" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:150 (forward_once) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="628" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="641.50"></text>
        </g>
        <g>
            <title>        return self.forward_once(x, profile)  # single-scale inference, train (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="650" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:138 (forward) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="672" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="685.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="694" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="707.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="716" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="729.50"></text>
        </g>
        <g>
            <title>                    imgs.to(p.device).type_as(p), augment, profile (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="738" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="751.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:221 (forward) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="760" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="773.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="782" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="795.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/autograd/grad_mode.py:27 (decorate_context) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="804" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="817.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="826" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="839.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="848" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="861.50"></text>
        </g>
        <g>
            <title>                pred = self.model(tensor)[0] (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="870" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="883.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/detector.py:89 (predict) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="892" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="905.50"></text>
        </g>
        <g>
            <title>        table_regions = self.table_detection_model.predict([image]) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="914" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="927.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:75 (extract) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="936" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="949.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="958" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="971.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (4,556,788 bytes, 1.55%)</title>
            <rect x="59.0101%" y="980" width="1.5469%" height="21" fill="rgb(255,231,231)" fg:x="173832386" fg:w="4556788"/>
            <text x="59.2601%" y="993.50"></text>
        </g>
        <g>
            <title>            x = m(x)  # run (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="342" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:150 (forward_once) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="364" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="377.50"></text>
        </g>
        <g>
            <title>        return self.forward_once(x, profile)  # single-scale inference, train (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="386" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:138 (forward) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="408" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="421.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="430" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="452" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="465.50"></text>
        </g>
        <g>
            <title>                    imgs.to(p.device).type_as(p), augment, profile (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="474" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:221 (forward) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="496" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="509.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="518" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/autograd/grad_mode.py:27 (decorate_context) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="540" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="562" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="584" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="597.50"></text>
        </g>
        <g>
            <title>                pred = self.model(tensor)[0] (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="606" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/detector.py:89 (predict) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="628" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="641.50"></text>
        </g>
        <g>
            <title>        table_regions = self.table_detection_model.predict([image]) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="650" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:75 (extract) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="672" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="694" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (5,185,262 bytes, 1.76%)</title>
            <rect x="60.5570%" y="716" width="1.7602%" height="21" fill="rgb(255,230,230)" fg:x="178389174" fg:w="5185262"/>
            <text x="60.8070%" y="729.50"></text>
        </g>
        <g>
            <title>        return self.act(self.conv(x)) (15,444,310 bytes, 5.24%)</title>
            <rect x="57.2809%" y="254" width="5.2428%" height="21" fill="rgb(255,215,215)" fg:x="168738466" fg:w="15444310"/>
            <text x="57.5309%" y="267.50">   ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:42 (fuseforward) (15,444,310 bytes, 5.24%)</title>
            <rect x="57.2809%" y="276" width="5.2428%" height="21" fill="rgb(255,215,215)" fg:x="168738466" fg:w="15444310"/>
            <text x="57.5309%" y="289.50">/hom..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (15,444,310 bytes, 5.24%)</title>
            <rect x="57.2809%" y="298" width="5.2428%" height="21" fill="rgb(255,215,215)" fg:x="168738466" fg:w="15444310"/>
            <text x="57.5309%" y="311.50">   ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (15,444,310 bytes, 5.24%)</title>
            <rect x="57.2809%" y="320" width="5.2428%" height="21" fill="rgb(255,215,215)" fg:x="168738466" fg:w="15444310"/>
            <text x="57.5309%" y="333.50">/hom..</text>
        </g>
        <g>
            <title>                1, (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="342" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:135 (forward) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="364" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="377.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="386" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="408" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="421.50"></text>
        </g>
        <g>
            <title>            x = m(x)  # run (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="430" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:150 (forward_once) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="452" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="465.50"></text>
        </g>
        <g>
            <title>        return self.forward_once(x, profile)  # single-scale inference, train (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="474" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/yolo.py:138 (forward) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="496" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="509.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="518" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="540" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="553.50"></text>
        </g>
        <g>
            <title>                    imgs.to(p.device).type_as(p), augment, profile (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="562" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/yolov5/models/common.py:221 (forward) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="584" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="597.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="606" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/autograd/grad_mode.py:27 (decorate_context) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="628" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="650" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="672" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="685.50"></text>
        </g>
        <g>
            <title>                pred = self.model(tensor)[0] (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="694" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="707.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/table_detection/detector.py:89 (predict) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="716" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="729.50"></text>
        </g>
        <g>
            <title>        table_regions = self.table_detection_model.predict([image]) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="738" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="751.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:75 (extract) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="760" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="773.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="782" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="795.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (608,340 bytes, 0.21%)</title>
            <rect x="62.3172%" y="804" width="0.2065%" height="21" fill="rgb(255,243,243)" fg:x="183574436" fg:w="608340"/>
            <text x="62.5672%" y="817.50"></text>
        </g>
        <g>
            <title>        return self.convs(x) + self.idconv(self.pool(x)) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="342" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="355.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:59 (forward) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="364" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="377.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="386" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="399.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="408" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="421.50"></text>
        </g>
        <g>
            <title>            input = module(input) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="430" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="452" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="465.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="474" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="496" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="509.50"></text>
        </g>
        <g>
            <title>        d4 = self.block2(d3)  # 128 (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="518" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:89 (forward) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="540" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="562" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="584" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="597.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="606" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="628" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="641.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="650" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="672" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="694" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (6,765,088 bytes, 2.30%)</title>
            <rect x="62.5237%" y="716" width="2.2965%" height="21" fill="rgb(255,227,227)" fg:x="184182776" fg:w="6765088"/>
            <text x="62.7737%" y="729.50"></text>
        </g>
        <g>
            <title>        h = self.up1(h, x) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="518" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="531.50">        h = self.up1(h, x)..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:98 (forward) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="540" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="553.50">/home/niits/SUN/table_reconstruc..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="562" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="575.50">            result = self.forwa..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="584" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="597.50">/home/niits/anaconda3/envs/table..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="606" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="619.50">            output = self.model..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="628" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="641.50">/home/niits/SUN/table_reconstruc..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="650" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="663.50">            mask = self.line_se..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="672" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="685.50">/home/niits/SUN/table_reconstruc..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="694" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="707.50">    tables = extraction.extract..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (79,913,146 bytes, 27.13%)</title>
            <rect x="64.8202%" y="716" width="27.1278%" height="21" fill="rgb(255,171,171)" fg:x="190947864" fg:w="79913146"/>
            <text x="65.0702%" y="729.50">/tmp/ipykernel_181619/1761890916..</text>
        </g>
        <g>
            <title>        h = self.up2(h, d1) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="518" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:97 (forward) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="540" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="562" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="584" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="597.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="606" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="628" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="641.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="650" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="672" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="694" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (1,453,330 bytes, 0.49%)</title>
            <rect x="91.9480%" y="716" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="270861010" fg:w="1453330"/>
            <text x="92.1980%" y="729.50"></text>
        </g>
        <g>
            <title>        h = self.up3(h, d2) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="518" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:96 (forward) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="540" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="562" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="584" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="597.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="606" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="628" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="641.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="650" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="672" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="694" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (1,453,434 bytes, 0.49%)</title>
            <rect x="92.4413%" y="716" width="0.4934%" height="21" fill="rgb(255,239,239)" fg:x="272314340" fg:w="1453434"/>
            <text x="92.6913%" y="729.50"></text>
        </g>
        <g>
            <title>        h = self.up4(h, d3)  # (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="518" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:95 (forward) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="540" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="562" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="584" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="597.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="606" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="628" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="641.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="650" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="672" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="694" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (2,278,498 bytes, 0.77%)</title>
            <rect x="92.9347%" y="716" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="273767774" fg:w="2278498"/>
            <text x="93.1847%" y="729.50"></text>
        </g>
        <g>
            <title>        h = self.up5(h, d4)  # 256 + 128 -&gt; 128 (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="518" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:94 (forward) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="540" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="562" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="584" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="597.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="606" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="628" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="641.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="650" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="672" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="694" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (2,278,874 bytes, 0.77%)</title>
            <rect x="93.7082%" y="716" width="0.7736%" height="21" fill="rgb(255,236,236)" fg:x="276046272" fg:w="2278874"/>
            <text x="93.9582%" y="729.50"></text>
        </g>
        <g>
            <title>        return self.double_conv(x) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="342" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="355.50">        return self.double_conv(x)..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/unet_parts.py:25 (forward) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="364" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="377.50">/home/niits/SUN/table_reconstruction..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="386" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="399.50">            result = self.forward(*..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="408" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="421.50">/home/niits/anaconda3/envs/table_rec..</text>
        </g>
        <g>
            <title>        return self.conv(x) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="430" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="443.50">        return self.conv(x)..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/unet_parts.py:68 (forward) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="452" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="465.50">/home/niits/SUN/table_reconstruction..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="474" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="487.50">            result = self.forward(*..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (89,655,780 bytes, 30.44%)</title>
            <rect x="64.8202%" y="496" width="30.4350%" height="21" fill="rgb(255,167,167)" fg:x="190947864" fg:w="89655780"/>
            <text x="65.0702%" y="509.50">/home/niits/anaconda3/envs/table_rec..</text>
        </g>
        <g>
            <title>        h = self.up6(d6, d5)  # 512 + 256 -&gt; 256 (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="518" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:93 (forward) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="540" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="553.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="562" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="584" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="597.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="606" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="628" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="641.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="650" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="672" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="685.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="694" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="707.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (2,278,498 bytes, 0.77%)</title>
            <rect x="94.4818%" y="716" width="0.7735%" height="21" fill="rgb(255,236,236)" fg:x="278325146" fg:w="2278498"/>
            <text x="94.7318%" y="729.50"></text>
        </g>
        <g>
            <title>        d1 = self.stem(x)  # 64 (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="430" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="443.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:85 (forward) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="452" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="465.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="474" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="487.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="496" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="509.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="518" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="531.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="540" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="553.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="562" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="575.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="584" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="597.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="606" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="619.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (2,042,923 bytes, 0.69%)</title>
            <rect x="95.2553%" y="628" width="0.6935%" height="21" fill="rgb(255,237,237)" fg:x="280603644" fg:w="2042923"/>
            <text x="95.5053%" y="641.50"></text>
        </g>
        <g>
            <title>        d3 = self.block1(d2)  # 64 (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="606" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:88 (forward) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="628" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="650" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="672" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="685.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="694" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="707.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="716" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="729.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="738" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="751.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="760" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="773.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="782" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="795.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (863,489 bytes, 0.29%)</title>
            <rect x="95.9488%" y="804" width="0.2931%" height="21" fill="rgb(255,241,241)" fg:x="282646567" fg:w="863489"/>
            <text x="96.1988%" y="817.50"></text>
        </g>
        <g>
            <title>        d4 = self.block2(d3)  # 128 (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="606" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="619.50">..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:89 (forward) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="628" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="641.50">/..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="650" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="663.50">..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="672" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="685.50">/..</text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="694" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="707.50">..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="716" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="729.50">/..</text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="738" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="751.50">..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="760" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="773.50">/..</text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="782" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="795.50">..</text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (8,164,034 bytes, 2.77%)</title>
            <rect x="96.2419%" y="804" width="2.7714%" height="21" fill="rgb(255,225,225)" fg:x="283510056" fg:w="8164034"/>
            <text x="96.4919%" y="817.50">/..</text>
        </g>
        <g>
            <title>        d5 = self.block3(d4)  # 256 (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="606" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:90 (forward) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="628" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="650" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="672" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="685.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="694" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="707.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="716" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="729.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="738" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="751.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="760" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="773.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="782" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="795.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.0133%" y="804" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="291674090" fg:w="1452402"/>
            <text x="99.2633%" y="817.50"></text>
        </g>
        <g>
            <title>                        self.padding, self.dilation, self.groups) (125,840,428 bytes, 42.72%)</title>
            <rect x="57.2809%" y="122" width="42.7185%" height="21" fill="rgb(255,151,151)" fg:x="168738466" fg:w="125840428"/>
            <text x="57.5309%" y="135.50">                        self.padding, self.dilation..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/conv.py:396 (_conv_forward) (125,840,428 bytes, 42.72%)</title>
            <rect x="57.2809%" y="144" width="42.7185%" height="21" fill="rgb(255,151,151)" fg:x="168738466" fg:w="125840428"/>
            <text x="57.5309%" y="157.50">/home/niits/anaconda3/envs/table_reconstruct/lib/pyt..</text>
        </g>
        <g>
            <title>        return self._conv_forward(input, self.weight, self.bias) (125,840,428 bytes, 42.72%)</title>
            <rect x="57.2809%" y="166" width="42.7185%" height="21" fill="rgb(255,151,151)" fg:x="168738466" fg:w="125840428"/>
            <text x="57.5309%" y="179.50">        return self._conv_forward(input, self.weigh..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/conv.py:399 (forward) (125,840,428 bytes, 42.72%)</title>
            <rect x="57.2809%" y="188" width="42.7185%" height="21" fill="rgb(255,151,151)" fg:x="168738466" fg:w="125840428"/>
            <text x="57.5309%" y="201.50">/home/niits/anaconda3/envs/table_reconstruct/lib/pyt..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (125,840,428 bytes, 42.72%)</title>
            <rect x="57.2809%" y="210" width="42.7185%" height="21" fill="rgb(255,151,151)" fg:x="168738466" fg:w="125840428"/>
            <text x="57.5309%" y="223.50">            result = self.forward(*input, **kwargs)..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (125,840,428 bytes, 42.72%)</title>
            <rect x="57.2809%" y="232" width="42.7185%" height="21" fill="rgb(255,151,151)" fg:x="168738466" fg:w="125840428"/>
            <text x="57.5309%" y="245.50">/home/niits/anaconda3/envs/table_reconstruct/lib/pyt..</text>
        </g>
        <g>
            <title>            input = module(input) (110,396,118 bytes, 37.48%)</title>
            <rect x="62.5237%" y="254" width="37.4757%" height="21" fill="rgb(255,158,158)" fg:x="184182776" fg:w="110396118"/>
            <text x="62.7737%" y="267.50">            input = module(input)..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (110,396,118 bytes, 37.48%)</title>
            <rect x="62.5237%" y="276" width="37.4757%" height="21" fill="rgb(255,158,158)" fg:x="184182776" fg:w="110396118"/>
            <text x="62.7737%" y="289.50">/home/niits/anaconda3/envs/table_reconstruct/..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (110,396,118 bytes, 37.48%)</title>
            <rect x="62.5237%" y="298" width="37.4757%" height="21" fill="rgb(255,158,158)" fg:x="184182776" fg:w="110396118"/>
            <text x="62.7737%" y="311.50">            result = self.forward(*input, **..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (110,396,118 bytes, 37.48%)</title>
            <rect x="62.5237%" y="320" width="37.4757%" height="21" fill="rgb(255,158,158)" fg:x="184182776" fg:w="110396118"/>
            <text x="62.7737%" y="333.50">/home/niits/anaconda3/envs/table_reconstruct/..</text>
        </g>
        <g>
            <title>            input = module(input) (13,975,250 bytes, 4.74%)</title>
            <rect x="95.2553%" y="342" width="4.7441%" height="21" fill="rgb(255,217,217)" fg:x="280603644" fg:w="13975250"/>
            <text x="95.5053%" y="355.50">   ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (13,975,250 bytes, 4.74%)</title>
            <rect x="95.2553%" y="364" width="4.7441%" height="21" fill="rgb(255,217,217)" fg:x="280603644" fg:w="13975250"/>
            <text x="95.5053%" y="377.50">/hom..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (13,975,250 bytes, 4.74%)</title>
            <rect x="95.2553%" y="386" width="4.7441%" height="21" fill="rgb(255,217,217)" fg:x="280603644" fg:w="13975250"/>
            <text x="95.5053%" y="399.50">   ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (13,975,250 bytes, 4.74%)</title>
            <rect x="95.2553%" y="408" width="4.7441%" height="21" fill="rgb(255,217,217)" fg:x="280603644" fg:w="13975250"/>
            <text x="95.5053%" y="421.50">/hom..</text>
        </g>
        <g>
            <title>        return self.convs(x) + self.idconv(self.pool(x)) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="430" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="443.50">  ..</text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:59 (forward) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="452" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="465.50">/ho..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="474" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="487.50">  ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="496" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="509.50">/ho..</text>
        </g>
        <g>
            <title>            input = module(input) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="518" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="531.50">  ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/container.py:119 (forward) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="540" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="553.50">/ho..</text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="562" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="575.50">  ..</text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (11,932,327 bytes, 4.05%)</title>
            <rect x="95.9488%" y="584" width="4.0506%" height="21" fill="rgb(255,219,219)" fg:x="282646567" fg:w="11932327"/>
            <text x="96.1988%" y="597.50">/ho..</text>
        </g>
        <g>
            <title>        d6 = self.block4(d5)  # 512 (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="606" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="619.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/unet/resunet.py:91 (forward) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="628" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="641.50"></text>
        </g>
        <g>
            <title>            result = self.forward(*input, **kwargs) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="650" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="663.50"></text>
        </g>
        <g>
            <title>/home/niits/anaconda3/envs/table_reconstruct/lib/python3.7/site-packages/torch/nn/modules/module.py:889 (_call_impl) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="672" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="685.50"></text>
        </g>
        <g>
            <title>            output = self.model(ts_img) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="694" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="707.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/line_segmentation/line_segment.py:80 (predict) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="716" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="729.50"></text>
        </g>
        <g>
            <title>            mask = self.line_segmentation_model.predict(padding_img) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="738" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="751.50"></text>
        </g>
        <g>
            <title>/home/niits/SUN/table_reconstruction/table_reconstruction/__init__.py:87 (extract) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="760" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="773.50"></text>
        </g>
        <g>
            <title>    tables = extraction.extract(image) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="782" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="795.50"></text>
        </g>
        <g>
            <title>/tmp/ipykernel_181619/1761890916.py:2 (__magic_run_with_fil) (1,452,402 bytes, 0.49%)</title>
            <rect x="99.5063%" y="804" width="0.4930%" height="21" fill="rgb(255,239,239)" fg:x="293126492" fg:w="1452402"/>
            <text x="99.7563%" y="817.50"></text>
        </g>
        <g>
            <title>all (294,580,715 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="294580715"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>